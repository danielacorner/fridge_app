{"version":3,"sources":["webpack:///./src/pages/new-recipe.js"],"names":["NewRecipe","state","templateKey","title","serves","minutes","description","image","ingredients","id","ingredient","measure","quantity","instructions","instruction","tags","handleChange","name","event","_this$setState","_this","setState","target","value","handleAddIngredient","newIngredient","reduce","curr","accum","concat","handleAddInstruction","newInstruction","handleRemoveIngredient","index","slice","handleRemoveInstruction","render","_this2","this","Header","styled","div","withConfig","displayName","componentId","Form","form","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","noValidate","autoComplete","method","netlify","data-netlify","data-netlify-honeypot","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_6___default","required","label","className","onChange","margin","variant","type","multiline","rowsMax","helperText","map","ing","key","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7___default","onClick","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_9___default","style","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_8___default","inst","max-rows","size","React","Component"],"mappings":"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","file":"component---src-pages-new-recipe-js-b61e20ce4f050032916d.js","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/Layout';\r\nimport styled from 'styled-components';\r\n// import { Link } from 'gatsby';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass NewRecipe extends React.Component {\r\n  state = {\r\n    templateKey: 'recipe-page',\r\n    title: '',\r\n    serves: '',\r\n    minutes: '',\r\n    description: '',\r\n    image: '',\r\n    ingredients: [\r\n      { id: 0, ingredient: '', measure: '', quantity: '' },\r\n      { id: 1, ingredient: '', measure: '', quantity: '' }\r\n    ],\r\n    instructions: [{ id: 0, instruction: '' }, { id: 1, instruction: '' }],\r\n    tags: []\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleAddIngredient = () => {\r\n    const newIngredient = {\r\n      id:\r\n        this.state.ingredients.reduce((curr, accum) => {\r\n          return curr.id > accum.id ? curr.id : accum.id;\r\n        }, 0) + 1,\r\n      ingredient: '',\r\n      measure: '',\r\n      quantity: ''\r\n    };\r\n    this.setState({\r\n      ingredients: [...this.state.ingredients, newIngredient]\r\n    });\r\n  };\r\n\r\n  handleAddInstruction = () => {\r\n    const newInstruction = {\r\n      id:\r\n        this.state.instructions.reduce((curr, accum) => {\r\n          return curr.id > accum.id ? curr.id : accum.id;\r\n        }, 0) + 1,\r\n      instruction: ''\r\n    };\r\n    this.setState({\r\n      instructions: [...this.state.instructions, newInstruction]\r\n    });\r\n  };\r\n\r\n  handleRemoveIngredient = index => {\r\n    this.setState({\r\n      ingredients: [\r\n        ...this.state.ingredients.slice(0, index),\r\n        ...this.state.ingredients.slice(index + 1)\r\n      ]\r\n    });\r\n  };\r\n  handleRemoveInstruction = index => {\r\n    this.setState({\r\n      instructions: [\r\n        ...this.state.ingredients.slice(0, index),\r\n        ...this.state.ingredients.slice(index + 1)\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const Header = styled.div`\r\n      display: grid;\r\n      grid-template-columns: 1fr;\r\n      align-items: end;\r\n      padding: 8px 40px 0 40px;\r\n      h1 {\r\n        width: 100%;\r\n        font-size: 36px;\r\n      }\r\n    `;\r\n\r\n    const Form = styled.form`\r\n      padding: 20px;\r\n      display: grid;\r\n      grid-gap: 10px;\r\n      width: 100%;\r\n      .numbersGrid {\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        justify-content: start;\r\n        grid-gap: 20px;\r\n      }\r\n      .numField {\r\n        display: inline-block;\r\n      }\r\n      h3 {\r\n        font-size: 24px;\r\n      }\r\n      .ingGrid,\r\n      .instGrid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)) 130px;\r\n        align-items: start;\r\n        grid-column-gap: 20px;\r\n        button {\r\n          align-self: center;\r\n          margin-bottom: 20px;\r\n          background: lightpink;\r\n          &:hover {\r\n            background: #ffd7dd;\r\n          }\r\n        }\r\n      }\r\n      .addIngBtn,\r\n      .addInstBtn {\r\n        margin-top: 10px;\r\n        background: lightpink;\r\n        &:hover {\r\n          background: #ffd7dd;\r\n        }\r\n      }\r\n\r\n      .ingredientsGrid {\r\n        margin: 20px 0;\r\n      }\r\n\r\n      .instructionsGrid {\r\n        margin: 20px 0;\r\n        .instGrid {\r\n          span.step {\r\n            margin-bottom: -10px;\r\n            font-size: 18px;\r\n            font-weight: 500;\r\n          }\r\n          grid-template-columns: 1fr 130px;\r\n          align-items: center;\r\n          button {\r\n            align-self: center;\r\n            margin-bottom: -10px;\r\n          }\r\n        }\r\n      }\r\n\r\n      .submitDiv {\r\n        display: grid;\r\n        justify-items: end;\r\n        button {\r\n          background: lightpink;\r\n          &:hover {\r\n            background: #ffd7dd;\r\n          }\r\n        }\r\n      }\r\n    `;\r\n\r\n    return (\r\n      <Layout>\r\n        <Header>\r\n          <h1>Submit a Recipe</h1>\r\n        </Header>\r\n        <Form\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          name=\"new-recipe\"\r\n          method=\"post\"\r\n          netlify\r\n          data-netlify=\"true\"\r\n          data-netlify-honeypot=\"bot-field\"\r\n        >\r\n          <TextField\r\n            required\r\n            label=\"Name\"\r\n            className=\"textField\"\r\n            onChange={() => this.handleChange('title')}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            required\r\n            label=\"Image URL\"\r\n            className=\"textField\"\r\n            onChange={() => this.handleChange('image')}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n          <div className=\"numbersGrid\">\r\n            <TextField\r\n              required\r\n              label=\"Servings\"\r\n              type=\"number\"\r\n              className=\"textField numField\"\r\n              onChange={() => this.handleChange('serves')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Time (minutes)\"\r\n              type=\"number\"\r\n              onChange={() => this.handleChange('minutes')}\r\n              className=\"textField numField\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <TextField\r\n            label=\"Description\"\r\n            multiline\r\n            rowsMax=\"4\"\r\n            onChange={() => this.handleChange('description')}\r\n            className=\"textField\"\r\n            margin=\"normal\"\r\n            helperText=\"Write a short description for your recipe\"\r\n            variant=\"outlined\"\r\n          />\r\n          <div className=\"ingredientsGrid\">\r\n            <h3>Ingredients</h3>\r\n            {this.state.ingredients.map((ing, index) => {\r\n              return (\r\n                <div className=\"ingGrid\" key={ing.id}>\r\n                  <TextField\r\n                    label=\"Ingredient\"\r\n                    onChange={() =>\r\n                      this.handleChange(`ingredients[${index}].ingredient`)\r\n                    }\r\n                    className=\"textField\"\r\n                    margin=\"normal\"\r\n                    helperText=\"Please use the singular form: onion, tomato, etc.\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    type=\"number\"\r\n                    label=\"Quantity\"\r\n                    onChange={() =>\r\n                      this.handleChange(`ingredients[${index}].quantity`)\r\n                    }\r\n                    className=\"textField\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    label=\"Measure\"\r\n                    onChange={() =>\r\n                      this.handleChange(`ingredients[${index}].measure`)\r\n                    }\r\n                    className=\"textField\"\r\n                    margin=\"normal\"\r\n                    helperText=\"unit: tbsp, tsp, cup, g, etc.\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <Button\r\n                    className=\"remIngBtn\"\r\n                    onClick={() => this.handleRemoveIngredient(index)}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Remove <CloseIcon style={{ margin: '0 -5 0 5' }} />\r\n                  </Button>\r\n                </div>\r\n              );\r\n            })}\r\n            <Button\r\n              className=\"addIngBtn\"\r\n              onClick={this.handleAddIngredient}\r\n              variant=\"outlined\"\r\n            >\r\n              Add Ingredient <AddIcon style={{ margin: '0 -5 0 5' }} />\r\n            </Button>\r\n          </div>\r\n          <div className=\"instructionsGrid\">\r\n            <h3>Instructions</h3>\r\n            {this.state.instructions.map((inst, index) => {\r\n              return (\r\n                <div className=\"instGrid\" key={inst.id}>\r\n                  <TextField\r\n                    label={`step ${index + 1}`}\r\n                    onChange={() =>\r\n                      this.handleChange(`instructions[${index}].instruction`)\r\n                    }\r\n                    className=\"textField\"\r\n                    multiline\r\n                    max-rows=\"6\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <Button\r\n                    className=\"remInstBtn\"\r\n                    onClick={() => this.handleRemoveInstruction(index)}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Remove <CloseIcon style={{ margin: '0 -5 0 5' }} />\r\n                  </Button>\r\n                </div>\r\n              );\r\n            })}\r\n            <Button\r\n              className=\"addInstBtn\"\r\n              onClick={this.handleAddInstruction}\r\n              variant=\"outlined\"\r\n            >\r\n              Add Step <AddIcon style={{ margin: '0 -5 0 5' }} />\r\n            </Button>\r\n          </div>\r\n          <div className=\"submitDiv\">\r\n            <Button type=\"submit\" size=\"large\" variant=\"contained\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecipe;\r\n"],"sourceRoot":""}