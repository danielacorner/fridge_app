{"version":3,"sources":["webpack:///./src/templates/recipes-page.js","webpack:///./src/components/Content.js"],"names":["__webpack_require__","r","__webpack_exports__","d","RecipesPageTemplate","RecipesPageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_Content__WEBPACK_IMPORTED_MODULE_3__","_ref","title","content","PageContent","contentComponent","Content","a","createElement","className","propTypes","PropTypes","string","node","isRequired","func","RecipesPage","_ref2","post","data","markdownRemark","HTMLContent","frontmatter","html","shape","object","dangerouslySetInnerHTML","__html"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,wCAAAE,IAAAJ,EAAAG,EAAAD,EAAA,qCAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,GAAAU,EAAAV,EAAAQ,EAAAC,GAAAE,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAMaI,EAAsB,SAAAS,GAA0C,IAAvCC,EAAuCD,EAAvCC,MAAOC,EAAgCF,EAAhCE,QACrCC,EADqEH,EAAvBI,kBACZC,IAExC,OACEX,EAAAY,EAAAC,cAAA,WAASC,UAAU,WACjBd,EAAAY,EAAAC,cAAA,OAAKC,UAAU,qBACbd,EAAAY,EAAAC,cAAA,OAAKC,UAAU,WACbd,EAAAY,EAAAC,cAAA,OAAKC,UAAU,4BACbd,EAAAY,EAAAC,cAAA,MAAIC,UAAU,sDACXP,GAEHP,EAAAY,EAAAC,cAACJ,EAAD,CAAaD,QAASA,SAQlCX,EAAoBkB,UAAY,CAC9BR,MAAOS,IAAUC,OACjBT,QAASQ,IAAUE,KAAKC,WACxBT,iBAAkBM,IAAUI,MAG9B,IAAMC,EAAc,SAAAC,GAAc,IACRC,EADQD,EAAXE,KACbC,eAER,OACEzB,EAAAY,EAAAC,cAACT,EAAA,EAAD,KACEJ,EAAAY,EAAAC,cAAChB,EAAD,CACEa,iBAAkBgB,IAClBnB,MAAOgB,EAAKI,YAAYpB,MACxBC,QAASe,EAAKK,SAMtBP,EAAYN,UAAY,CACtBS,KAAMR,IAAUa,MAAM,CACpBJ,eAAgBT,IAAUc,UAI9BnC,EAAA,UAEO,IAAMG,EAAgB,+CCrD7BL,EAAAG,EAAAD,EAAA,sBAAA+B,IAAA,IAAA3B,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,GAAAU,EAAAV,EAAAQ,EAAAC,GAGawB,EAAc,SAAApB,GAAA,IAAGE,EAAHF,EAAGE,QAASM,EAAZR,EAAYQ,UAAZ,OACzBd,EAAAY,EAAAC,cAAA,OAAKC,UAAWA,EAAWiB,wBAAyB,CAAEC,OAAQxB,MAG1DG,EAAU,SAAAW,GAAA,IAAGd,EAAHc,EAAGd,QAASM,EAAZQ,EAAYR,UAAZ,OACdd,EAAAY,EAAAC,cAAA,OAAKC,UAAWA,GAAYN,IAG9BG,EAAQI,UAAY,CAClBP,QAASQ,IAAUE,KACnBJ,UAAWE,IAAUC,QAGvBS,EAAYX,UAAYJ,EAAQI,UAEjBJ","file":"component---src-templates-recipes-page-js-d6bf226e786b2bad5552.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { graphql /* Link */ } from 'gatsby';\r\nimport Layout from '../components/Layout';\r\nimport Content, { HTMLContent } from '../components/Content';\r\n\r\nexport const RecipesPageTemplate = ({ title, content, contentComponent }) => {\r\n  const PageContent = contentComponent || Content;\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"container content\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-10 is-offset-1\">\r\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light\">\r\n              {title}\r\n            </h1>\r\n            <PageContent content={content} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nRecipesPageTemplate.propTypes = {\r\n  title: PropTypes.string,\r\n  content: PropTypes.node.isRequired,\r\n  contentComponent: PropTypes.func\r\n};\r\n\r\nconst RecipesPage = ({ data }) => {\r\n  const { markdownRemark: post } = data;\r\n\r\n  return (\r\n    <Layout>\r\n      <RecipesPageTemplate\r\n        contentComponent={HTMLContent}\r\n        title={post.frontmatter.title}\r\n        content={post.html}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nRecipesPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.object\r\n  })\r\n};\r\n\r\nexport default RecipesPage;\r\n\r\nexport const RecipesPageQuery = graphql`\r\n  query RecipesPage($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const HTMLContent = ({ content, className }) => (\r\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\r\n)\r\n\r\nconst Content = ({ content, className }) => (\r\n  <div className={className}>{content}</div>\r\n)\r\n\r\nContent.propTypes = {\r\n  content: PropTypes.node,\r\n  className: PropTypes.string,\r\n}\r\n\r\nHTMLContent.propTypes = Content.propTypes\r\n\r\nexport default Content\r\n"],"sourceRoot":""}