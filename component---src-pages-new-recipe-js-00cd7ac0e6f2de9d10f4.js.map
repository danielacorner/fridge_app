{"version":3,"sources":["webpack:///./src/pages/new-recipe.js"],"names":["Header","styled","div","withConfig","displayName","componentId","Form","form","NewRecipe","_this","_React$Component","call","this","state","templateKey","title","serves","minutes","description","image","ingredients","id","ingredient","measure","quantity","instructions","instruction","tags","handleChange","event","_this$setState","setState","target","name","value","handleAddIngredient","newIngredient","reduce","curr","accum","concat","handleAddInstruction","newInstruction","handleRemoveIngredient","index","slice","handleRemoveInstruction","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","render","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","noValidate","autoComplete","method","netlify","data-netlify","data-netlify-honeypot","key","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_9___default","required","label","className","onChange","margin","variant","type","multiline","rowsMax","helperText","map","ing","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_10___default","onClick","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_11___default","style","inst","max-rows","size","React","Component"],"mappings":"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","file":"component---src-pages-new-recipe-js-00cd7ac0e6f2de9d10f4.js","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/Layout';\r\nimport styled from 'styled-components';\r\n// import { Link } from 'gatsby';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nconst Header = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  align-items: end;\r\n  padding: 8px 40px 0 40px;\r\n  h1 {\r\n    width: 100%;\r\n    font-size: 36px;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  width: 100%;\r\n  .numbersGrid {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    justify-content: start;\r\n    grid-gap: 20px;\r\n  }\r\n  .numField {\r\n    display: inline-block;\r\n  }\r\n  h3 {\r\n    font-size: 24px;\r\n  }\r\n  .ingGrid,\r\n  .instGrid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)) 50px;\r\n    align-items: start;\r\n    grid-column-gap: 20px;\r\n    button {\r\n      align-self: center;\r\n      margin-bottom: 20px;\r\n      background: lightpink;\r\n      min-width: 0;\r\n\r\n      &:hover {\r\n        background: #ffd7dd;\r\n      }\r\n    }\r\n  }\r\n  .addIngBtn,\r\n  .addInstBtn {\r\n    margin-top: 10px;\r\n    background: lightpink;\r\n    &:hover {\r\n      background: #ffd7dd;\r\n    }\r\n  }\r\n\r\n  .ingredientsGrid {\r\n    margin: 20px 0;\r\n  }\r\n\r\n  .instructionsGrid {\r\n    margin: 20px 0;\r\n    .instGrid {\r\n      span.step {\r\n        margin-bottom: -10px;\r\n        font-size: 18px;\r\n        font-weight: 500;\r\n      }\r\n      grid-template-columns: 1fr 50px;\r\n      align-items: center;\r\n      button {\r\n        align-self: center;\r\n        margin-bottom: -10px;\r\n        min-width: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .submitDiv {\r\n    display: grid;\r\n    justify-items: end;\r\n    button {\r\n      background: lightpink;\r\n      &:hover {\r\n        background: #ffd7dd;\r\n      }\r\n    }\r\n  }\r\n`;\r\nclass NewRecipe extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  state = {\r\n    templateKey: 'recipe-page',\r\n    title: '',\r\n    serves: '',\r\n    minutes: '',\r\n    description: '',\r\n    image: '',\r\n    ingredients: [\r\n      { id: 0, ingredient: '', measure: '', quantity: '' },\r\n      { id: 1, ingredient: '', measure: '', quantity: '' }\r\n    ],\r\n    instructions: [{ id: 0, instruction: '' }, { id: 1, instruction: '' }],\r\n    tags: []\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleAddIngredient = () => {\r\n    const newIngredient = {\r\n      id:\r\n        this.state.ingredients.reduce((curr, accum) => {\r\n          return curr.id > accum.id ? curr.id : accum.id;\r\n        }, 0) + 1,\r\n      ingredient: '',\r\n      measure: '',\r\n      quantity: ''\r\n    };\r\n    this.setState({\r\n      ingredients: this.state.ingredients.concat(newIngredient)\r\n    });\r\n  };\r\n  handleAddInstruction = () => {\r\n    const newInstruction = {\r\n      id:\r\n        this.state.instructions.reduce((curr, accum) => {\r\n          return curr.id > accum.id ? curr.id : accum.id;\r\n        }, 0) + 1,\r\n      instruction: ''\r\n    };\r\n    this.setState({\r\n      instructions: [...this.state.instructions, newInstruction]\r\n    });\r\n  };\r\n\r\n  handleRemoveIngredient = index => {\r\n    this.setState({\r\n      ingredients: [\r\n        ...this.state.ingredients.slice(0, index),\r\n        ...this.state.ingredients.slice(index + 1)\r\n      ]\r\n    });\r\n  };\r\n  handleRemoveInstruction = index => {\r\n    this.setState({\r\n      instructions: [\r\n        ...this.state.instructions.slice(0, index),\r\n        ...this.state.instructions.slice(index + 1)\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Header>\r\n          <h1>Submit a Recipe</h1>\r\n        </Header>\r\n        <Form\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          name=\"new-recipe\"\r\n          method=\"post\"\r\n          netlify\r\n          data-netlify=\"true\"\r\n          data-netlify-honeypot=\"bot-field\"\r\n          key=\"form\"\r\n        >\r\n          <TextField\r\n            key=\"titlefield\"\r\n            required\r\n            label=\"Name\"\r\n            name=\"title\"\r\n            className=\"textField\"\r\n            onChange={this.handleChange}\r\n            value={this.state.title}\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            required\r\n            label=\"Image URL\"\r\n            className=\"textField\"\r\n            name=\"image\"\r\n            onChange={this.handleChange}\r\n            value={this.state.image}\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n          />\r\n          <div className=\"numbersGrid\">\r\n            <TextField\r\n              required\r\n              label=\"Servings\"\r\n              type=\"number\"\r\n              className=\"textField numField\"\r\n              name=\"serves\"\r\n              onChange={this.handleChange}\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Time (minutes)\"\r\n              type=\"number\"\r\n              name=\"minutes\"\r\n              onChange={this.handleChange}\r\n              className=\"textField numField\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <TextField\r\n            label=\"Description\"\r\n            multiline\r\n            rowsMax=\"4\"\r\n            name=\"description\"\r\n            onChange={this.handleChange}\r\n            className=\"textField\"\r\n            margin=\"dense\"\r\n            helperText=\"Write a short description for your recipe\"\r\n            variant=\"outlined\"\r\n          />\r\n          <div className=\"ingredientsGrid\">\r\n            <h3>Ingredients</h3>\r\n            {this.state.ingredients.map((ing, index) => {\r\n              return (\r\n                <div className=\"ingGrid\" key={'ingredient_' + ing.id}>\r\n                  <TextField\r\n                    label=\"Ingredient\"\r\n                    onChange={this.handleChange}\r\n                    name={`ingredients[${index}].ingredient`}\r\n                    className=\"textField\"\r\n                    margin=\"dense\"\r\n                    helperText=\"Please use the singular form: onion, tomato, etc.\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    type=\"number\"\r\n                    label=\"Quantity\"\r\n                    onChange={this.handleChange}\r\n                    name={`ingredients[${index}].quantity`}\r\n                    className=\"textField\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    label=\"Measure\"\r\n                    onChange={this.handleChange}\r\n                    name={`ingredients[${index}].measure`}\r\n                    className=\"textField\"\r\n                    margin=\"dense\"\r\n                    helperText=\"unit: tbsp, tsp, cup, g, etc.\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <Button\r\n                    className=\"remIngBtn\"\r\n                    onClick={() => this.handleRemoveIngredient(index)}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    <CloseIcon />\r\n                  </Button>\r\n                </div>\r\n              );\r\n            })}\r\n            <Button\r\n              className=\"addIngBtn\"\r\n              onClick={this.handleAddIngredient}\r\n              variant=\"outlined\"\r\n            >\r\n              Add Ingredient <AddIcon style={{ margin: '0 -5 0 5' }} />\r\n            </Button>\r\n          </div>\r\n          <div className=\"instructionsGrid\">\r\n            <h3>Instructions</h3>\r\n            {this.state.instructions.map((inst, index) => {\r\n              return (\r\n                <div className=\"instGrid\" key={'instruction_' + inst.id}>\r\n                  <TextField\r\n                    label={`step ${index + 1}`}\r\n                    onChange={this.handleChange}\r\n                    name={`instructions[${index}].instruction`}\r\n                    // defaultValue={this.state.instructions[index].instruction}\r\n                    className=\"textField\"\r\n                    multiline\r\n                    max-rows=\"6\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <Button\r\n                    className=\"remInstBtn\"\r\n                    onClick={() => this.handleRemoveInstruction(index)}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    <CloseIcon />\r\n                  </Button>\r\n                </div>\r\n              );\r\n            })}\r\n            <Button\r\n              className=\"addInstBtn\"\r\n              onClick={this.handleAddInstruction}\r\n              variant=\"outlined\"\r\n            >\r\n              Add Step <AddIcon style={{ margin: '0 -5 0 5' }} />\r\n            </Button>\r\n          </div>\r\n          <div className=\"submitDiv\">\r\n            <Button type=\"submit\" size=\"large\" variant=\"contained\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecipe;\r\n"],"sourceRoot":""}