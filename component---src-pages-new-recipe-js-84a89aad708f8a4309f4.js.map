{"version":3,"sources":["webpack:///./src/pages/new-recipe.js"],"names":["Header","styled","div","withConfig","displayName","componentId","Container","Form","form","NewRecipe","_this","_React$Component","call","this","state","templateKey","title","serves","minutes","description","image","ingredients","id","ingredient","measure","quantity","instructions","instruction","tags","handleChange","event","_this$setState","setState","target","name","value","handleAddIngredient","newIngredient","reduce","curr","accum","concat","handleAddInstruction","newInstruction","handleRemoveIngredient","index","slice","handleRemoveInstruction","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","render","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","noValidate","autoComplete","method","netlify","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_9___default","key","required","label","className","onChange","margin","variant","type","multiline","rowsMax","helperText","map","ing","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_10___default","onClick","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_11___default","style","inst","max-rows","size","React","Component"],"mappings":"4QAQMA,EAASC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAGJ,CAAH,mHAWNK,EAAYL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,YAAGJ,CAAH,mDAKTM,EAAON,IAAOO,KAAVL,WAAA,CAAAC,YAAA,mBAAAC,YAAA,YAAGJ,CAAH,4lCA2FJQ,cACJ,SAAAA,IAAc,IAAAC,EAAA,OACZA,EAAAC,EAAAC,KAAAC,aAGFC,MAAQ,CACNC,YAAa,cACbC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,YAAa,GACbC,MAAO,GACPC,YAAa,CACX,CAAEC,GAAI,EAAGC,WAAY,GAAIC,QAAS,GAAIC,SAAU,IAChD,CAAEH,GAAI,EAAGC,WAAY,GAAIC,QAAS,GAAIC,SAAU,KAElDC,aAAc,CAAC,CAAEJ,GAAI,EAAGK,YAAa,IAAM,CAAEL,GAAI,EAAGK,YAAa,KACjEC,KAAM,IAhBMlB,EAmBdmB,aAAe,SAAAC,GAAS,IAAAC,EACtBrB,EAAKsB,WAALD,EAAA,IACGD,EAAMG,OAAOC,MAAOJ,EAAMG,OAAOE,MADpCJ,KApBYrB,EAyBd0B,oBAAsB,WACpB,IAAMC,EAAgB,CACpBf,GACEZ,EAAKI,MAAMO,YAAYiB,OAAO,SAACC,EAAMC,GACnC,OAAOD,EAAKjB,GAAKkB,EAAMlB,GAAKiB,EAAKjB,GAAKkB,EAAMlB,IAC3C,GAAK,EACVC,WAAY,GACZC,QAAS,GACTC,SAAU,IAEZf,EAAKsB,SAAS,CACZX,YAAaX,EAAKI,MAAMO,YAAYoB,OAAOJ,MApCjC3B,EAuCdgC,qBAAuB,WACrB,IAAMC,EAAiB,CACrBrB,GACEZ,EAAKI,MAAMY,aAAaY,OAAO,SAACC,EAAMC,GACpC,OAAOD,EAAKjB,GAAKkB,EAAMlB,GAAKiB,EAAKjB,GAAKkB,EAAMlB,IAC3C,GAAK,EACVK,YAAa,IAEfjB,EAAKsB,SAAS,CACZN,aAAkBhB,EAAKI,MAAMY,aAAjBe,OAAA,CAA+BE,OAhDjCjC,EAoDdkC,uBAAyB,SAAAC,GACvBnC,EAAKsB,SAAS,CACZX,YACKX,EAAKI,MAAMO,YAAYyB,MAAM,EAAGD,GAD1BJ,OAEN/B,EAAKI,MAAMO,YAAYyB,MAAMD,EAAQ,OAxDhCnC,EA4DdqC,wBAA0B,SAAAF,GACxBnC,EAAKsB,SAAS,CACZN,aACKhB,EAAKI,MAAMY,aAAaoB,MAAM,EAAGD,GAD1BJ,OAEP/B,EAAKI,MAAMY,aAAaoB,MAAMD,EAAQ,OA9D7CnC,EAAKmB,aAAenB,EAAKmB,aAAamB,KAAlBC,QAAAvC,KAFRA,8BAqEdwC,kBAAS,IAAAC,EAAAtC,KACP,OACEuC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAChD,EAAD,KACE8C,EAAAC,EAAAC,cAACtD,EAAD,KACEoD,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAC/C,EAAD,CACEiD,YAAU,EACVC,aAAa,MACbvB,KAAK,aACLwB,OAAO,OACPC,SAAO,GAEPP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEQ,IAAI,aACJC,UAAQ,EACRC,MAAM,OACN7B,KAAK,QACL8B,UAAU,YACVC,SAAUpD,KAAKgB,aACfM,MAAOtB,KAAKC,MAAME,MAClBkD,OAAO,QACPC,QAAQ,aAEVf,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACES,UAAQ,EACRC,MAAM,YACNC,UAAU,YACV9B,KAAK,QACL+B,SAAUpD,KAAKgB,aACfM,MAAOtB,KAAKC,MAAMM,MAClB8C,OAAO,QACPC,QAAQ,aAEVf,EAAAC,EAAAC,cAAA,OAAKU,UAAU,eACbZ,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACES,UAAQ,EACRC,MAAM,WACNK,KAAK,SACLJ,UAAU,qBACV9B,KAAK,SACL+B,SAAUpD,KAAKgB,aACfqC,OAAO,QACPC,QAAQ,aAEVf,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACES,UAAQ,EACRC,MAAM,iBACNK,KAAK,SACLlC,KAAK,UACL+B,SAAUpD,KAAKgB,aACfmC,UAAU,qBACVE,OAAO,QACPC,QAAQ,cAGZf,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEU,MAAM,cACNM,WAAS,EACTC,QAAQ,IACRpC,KAAK,cACL+B,SAAUpD,KAAKgB,aACfmC,UAAU,YACVE,OAAO,QACPK,WAAW,4CACXJ,QAAQ,aAEVf,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBACbZ,EAAAC,EAAAC,cAAA,yBACCzC,KAAKC,MAAMO,YAAYmD,IAAI,SAACC,EAAK5B,GAChC,OACEO,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UAAUH,IAAK,cAAgBY,EAAInD,IAChD8B,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iBACbZ,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEU,MAAM,aACNE,SAAUd,EAAKtB,aACfK,KAAI,eAAiBW,EAAjB,eACJmB,UAAU,YACVE,OAAO,QACPK,WAAW,yDACXJ,QAAQ,aAEVf,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEe,KAAK,SACLL,MAAM,WACNE,SAAUd,EAAKtB,aACfK,KAAI,eAAiBW,EAAjB,aACJmB,UAAU,YACVE,OAAO,QACPC,QAAQ,WACRI,WAAW,cAEbnB,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEU,MAAM,UACNE,SAAUd,EAAKtB,aACfK,KAAI,eAAiBW,EAAjB,YACJmB,UAAU,YACVE,OAAO,QACPK,WAAW,uBACXJ,QAAQ,cAGZf,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CACEW,UAAU,YACVW,QAAS,kBAAMxB,EAAKP,uBAAuBC,IAC3CsB,QAAQ,YAERf,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,UAKRD,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CACEW,UAAU,YACVW,QAAS9D,KAAKuB,oBACd+B,QAAQ,YAHV,kBAKiBf,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAASyB,MAAO,CAAEZ,OAAQ,gBAG7Cd,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oBACbZ,EAAAC,EAAAC,cAAA,0BACCzC,KAAKC,MAAMY,aAAa8C,IAAI,SAACO,EAAMlC,GAClC,OACEO,EAAAC,EAAAC,cAAA,OAAKU,UAAU,WAAWH,IAAK,eAAiBkB,EAAKzD,IACnD8B,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEU,MAAK,SAAUlB,EAAQ,GACvBoB,SAAUd,EAAKtB,aACfK,KAAI,gBAAkBW,EAAlB,gBAEJmB,UAAU,YACVK,WAAS,EACTW,WAAS,IACTd,OAAO,QACPC,QAAQ,aAEVf,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CACEW,UAAU,aACVW,QAAS,kBAAMxB,EAAKJ,wBAAwBF,IAC5CsB,QAAQ,YAERf,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,UAKRD,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CACEW,UAAU,aACVW,QAAS9D,KAAK6B,qBACdyB,QAAQ,YAHV,YAKWf,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAASyB,MAAO,CAAEZ,OAAQ,gBAGvCd,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACbZ,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAQe,KAAK,SAASa,KAAK,QAAQd,QAAQ,aAA3C,kBAlOUe,IAAMC,WA6Of1E","file":"component---src-pages-new-recipe-js-84a89aad708f8a4309f4.js","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/Layout';\r\nimport styled from 'styled-components';\r\n// import { Link } from 'gatsby';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nconst Header = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  align-items: end;\r\n  padding: 8px 40px 0 40px;\r\n  h1 {\r\n    width: 100%;\r\n    font-size: 36px;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding-top: 16px;\r\n  margin: auto;\r\n  max-width: 900px;\r\n`;\r\nconst Form = styled.form`\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  width: 100%;\r\n  .numbersGrid {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    justify-content: start;\r\n    grid-gap: 20px;\r\n  }\r\n  .numField {\r\n    display: inline-block;\r\n  }\r\n  h3 {\r\n    font-size: 24px;\r\n  }\r\n  .ingGrid,\r\n  .instGrid {\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)) 50px;\r\n    display: grid;\r\n    align-items: start;\r\n    grid-column-gap: 20px;\r\n    button {\r\n      align-self: start;\r\n      margin-top: 12px;\r\n      background: lightpink;\r\n      min-width: 0;\r\n\r\n      &:hover {\r\n        background: #ffd7dd;\r\n      }\r\n    }\r\n  }\r\n  .instGrid button {\r\n    margin-top: -4px;\r\n  }\r\n  .ingGrid {\r\n    display: grid;\r\n    align-items: start;\r\n    grid-column-gap: 20px;\r\n    grid-template-columns: 1fr 50px;\r\n  }\r\n  .ingGridFields {\r\n    display: grid;\r\n    align-items: start;\r\n    grid-column-gap: 20px;\r\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n  }\r\n  .addIngBtn,\r\n  .addInstBtn {\r\n    margin-top: 10px;\r\n    background: lightpink;\r\n    &:hover {\r\n      background: #ffd7dd;\r\n    }\r\n  }\r\n\r\n  .ingredientsGrid {\r\n    margin: 20px 0;\r\n  }\r\n\r\n  .instructionsGrid {\r\n    margin: 20px 0;\r\n    .instGrid {\r\n      span.step {\r\n        margin-bottom: -10px;\r\n        font-size: 18px;\r\n        font-weight: 500;\r\n      }\r\n      grid-template-columns: 1fr 50px;\r\n      align-items: center;\r\n      button {\r\n        align-self: center;\r\n        margin-bottom: -10px;\r\n        min-width: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .submitDiv {\r\n    display: grid;\r\n    justify-items: end;\r\n    button {\r\n      background: lightpink;\r\n      &:hover {\r\n        background: #ffd7dd;\r\n      }\r\n    }\r\n  }\r\n`;\r\nclass NewRecipe extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  state = {\r\n    templateKey: 'recipe-page',\r\n    title: '',\r\n    serves: '',\r\n    minutes: '',\r\n    description: '',\r\n    image: '',\r\n    ingredients: [\r\n      { id: 0, ingredient: '', measure: '', quantity: '' },\r\n      { id: 1, ingredient: '', measure: '', quantity: '' }\r\n    ],\r\n    instructions: [{ id: 0, instruction: '' }, { id: 1, instruction: '' }],\r\n    tags: []\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleAddIngredient = () => {\r\n    const newIngredient = {\r\n      id:\r\n        this.state.ingredients.reduce((curr, accum) => {\r\n          return curr.id > accum.id ? curr.id : accum.id;\r\n        }, 0) + 1,\r\n      ingredient: '',\r\n      measure: '',\r\n      quantity: ''\r\n    };\r\n    this.setState({\r\n      ingredients: this.state.ingredients.concat(newIngredient)\r\n    });\r\n  };\r\n  handleAddInstruction = () => {\r\n    const newInstruction = {\r\n      id:\r\n        this.state.instructions.reduce((curr, accum) => {\r\n          return curr.id > accum.id ? curr.id : accum.id;\r\n        }, 0) + 1,\r\n      instruction: ''\r\n    };\r\n    this.setState({\r\n      instructions: [...this.state.instructions, newInstruction]\r\n    });\r\n  };\r\n\r\n  handleRemoveIngredient = index => {\r\n    this.setState({\r\n      ingredients: [\r\n        ...this.state.ingredients.slice(0, index),\r\n        ...this.state.ingredients.slice(index + 1)\r\n      ]\r\n    });\r\n  };\r\n  handleRemoveInstruction = index => {\r\n    this.setState({\r\n      instructions: [\r\n        ...this.state.instructions.slice(0, index),\r\n        ...this.state.instructions.slice(index + 1)\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Container>\r\n          <Header>\r\n            <h1>Submit a Recipe</h1>\r\n          </Header>\r\n          <Form\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            name=\"new-recipe\"\r\n            method=\"POST\"\r\n            netlify\r\n          >\r\n            <TextField\r\n              key=\"titlefield\"\r\n              required\r\n              label=\"Name\"\r\n              name=\"title\"\r\n              className=\"textField\"\r\n              onChange={this.handleChange}\r\n              value={this.state.title}\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Image URL\"\r\n              className=\"textField\"\r\n              name=\"image\"\r\n              onChange={this.handleChange}\r\n              value={this.state.image}\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n            />\r\n            <div className=\"numbersGrid\">\r\n              <TextField\r\n                required\r\n                label=\"Servings\"\r\n                type=\"number\"\r\n                className=\"textField numField\"\r\n                name=\"serves\"\r\n                onChange={this.handleChange}\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                required\r\n                label=\"Time (minutes)\"\r\n                type=\"number\"\r\n                name=\"minutes\"\r\n                onChange={this.handleChange}\r\n                className=\"textField numField\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n            <TextField\r\n              label=\"Description\"\r\n              multiline\r\n              rowsMax=\"4\"\r\n              name=\"description\"\r\n              onChange={this.handleChange}\r\n              className=\"textField\"\r\n              margin=\"dense\"\r\n              helperText=\"Write a short description for your recipe\"\r\n              variant=\"outlined\"\r\n            />\r\n            <div className=\"ingredientsGrid\">\r\n              <h3>Ingredients</h3>\r\n              {this.state.ingredients.map((ing, index) => {\r\n                return (\r\n                  <div className=\"ingGrid\" key={'ingredient_' + ing.id}>\r\n                    <div className=\"ingGridFields\">\r\n                      <TextField\r\n                        label=\"Ingredient\"\r\n                        onChange={this.handleChange}\r\n                        name={`ingredients[${index}].ingredient`}\r\n                        className=\"textField\"\r\n                        margin=\"dense\"\r\n                        helperText=\"Please use the singular form: onion, tomato, carrot...\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"Quantity\"\r\n                        onChange={this.handleChange}\r\n                        name={`ingredients[${index}].quantity`}\r\n                        className=\"textField\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        helperText=\"how many?\"\r\n                      />\r\n                      <TextField\r\n                        label=\"Measure\"\r\n                        onChange={this.handleChange}\r\n                        name={`ingredients[${index}].measure`}\r\n                        className=\"textField\"\r\n                        margin=\"dense\"\r\n                        helperText=\"tbsp, tsp, cup, g...\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </div>\r\n                    <Button\r\n                      className=\"remIngBtn\"\r\n                      onClick={() => this.handleRemoveIngredient(index)}\r\n                      variant=\"outlined\"\r\n                    >\r\n                      <CloseIcon />\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              })}\r\n              <Button\r\n                className=\"addIngBtn\"\r\n                onClick={this.handleAddIngredient}\r\n                variant=\"outlined\"\r\n              >\r\n                Add Ingredient <AddIcon style={{ margin: '0 -5 0 5' }} />\r\n              </Button>\r\n            </div>\r\n            <div className=\"instructionsGrid\">\r\n              <h3>Instructions</h3>\r\n              {this.state.instructions.map((inst, index) => {\r\n                return (\r\n                  <div className=\"instGrid\" key={'instruction_' + inst.id}>\r\n                    <TextField\r\n                      label={`step ${index + 1}`}\r\n                      onChange={this.handleChange}\r\n                      name={`instructions[${index}].instruction`}\r\n                      // defaultValue={this.state.instructions[index].instruction}\r\n                      className=\"textField\"\r\n                      multiline\r\n                      max-rows=\"6\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <Button\r\n                      className=\"remInstBtn\"\r\n                      onClick={() => this.handleRemoveInstruction(index)}\r\n                      variant=\"outlined\"\r\n                    >\r\n                      <CloseIcon />\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              })}\r\n              <Button\r\n                className=\"addInstBtn\"\r\n                onClick={this.handleAddInstruction}\r\n                variant=\"outlined\"\r\n              >\r\n                Add Step <AddIcon style={{ margin: '0 -5 0 5' }} />\r\n              </Button>\r\n            </div>\r\n            <div className=\"submitDiv\">\r\n              <Button type=\"submit\" size=\"large\" variant=\"contained\">\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecipe;\r\n"],"sourceRoot":""}